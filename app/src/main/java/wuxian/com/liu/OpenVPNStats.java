/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package net.openvpn.openvpn;

import android.widget.BaseAdapter;
import java.util.ArrayList;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import android.content.Context;
import android.widget.AbsListView;
import android.widget.GridView;
import android.os.Handler;
import android.os.Bundle;
import android.widget.ListAdapter;
import android.util.Log;

public class OpenVPNStats extends OpenVPNClientBase {
    private static final String TAG = "OpenVPNClientStats";
    private OpenVPNStats.StatsAdapter adapter;
    private GridView gridview;
    private Handler stats_timer_handler;
    private Runnable stats_timer_task;
    
    public OpenVPNStats() {
        stats_timer_handler = new Handler();
        stats_timer_task = new Runnable(this) {
            
            public void run() {
            }
        };
    }
    
    class Stat {
        public int name_idx;
        public long value;
    }
    
    class StatsAdapter extends BaseAdapter {
        private String[] stat_names;
        private ArrayList<OpenVPNStats.Stat> stats;
        
        StatsAdapter(OpenVPNStats p1) {
            stat_names = OpenVPNService.stat_names();
        }
        
        public void update_stats(ClientAPI_LLVector new_stats) {
            ArrayList<OpenVPNStats.Stat> build_stats = new ArrayList<OpenVPNStats.Stat>();
            for(int i = 0x0; i < stat_names.length; i = i + 0x1) {
                long value = new_stats.get(i);
                if(value > 0x0) {
                    OpenVPNStats.Stat s = new OpenVPNStats.Stat(0x0);
                    s.name_idx = i;
                    s.value = value;
                    build_stats.add(s);
                }
            }
            stats = build_stats;
            notifyDataSetChanged();
        }
        
        public int getCount() {
            if(stats != null) {
                return (stats.size() * 0x2);
            }
            return 0x0;
        }
        
        public Object getItem(int position) {
            return null;
        }
        
        public long getItemId(int position) {
            return 0x0;
        }
        
        private String text_at_pos(int pos) {
            int row = pos / 0x2;
            int col = pos % 0x2;
            OpenVPNStats.Stat s = (OpenVPNStats.Stat)stats.get(row);
            if(col == 0) {
                return stat_names[s.name_idx];
            }
            return String.format("%d", s.value);
        }
        
        public View getView(int position, View convertView, ViewGroup parent) {
            if(convertView == null) {
                TextView tv = new TextView(this$0);
                tv.setLayoutParams(new AbsListView.LayoutParams(-0x2, -0x2));
            } else {
                TextView tv = (TextView)convertView;
            }
            tv.setText(text_at_pos(position));
            return tv;
        }
    }
    
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(0x7f03000f);
        adapter = new OpenVPNStats.StatsAdapter(this);
        gridview = (GridView)findViewById(0x7f0a008f);
        gridview.setAdapter(adapter);
        doBindService();
    }
    
    private void cancel_stats() {
        stats_timer_handler.removeCallbacks(stats_timer_task);
    }
    
    private void schedule_stats() {
        cancel_stats();
        stats_timer_handler.postDelayed(stats_timer_task, 0x3e8);
    }
    
    private void show_stats() {
        ClientAPI_LLVector sv = get_stat_values_full();
        if(sv != null) {
            adapter.update_stats(sv);
        }
    }
    
    protected void onDestroy() {
        Log.d("OpenVPNClientStats", "STATS: onDestroy");
        stop();
        super.onDestroy();
    }
    
    private void stop() {
        cancel_stats();
        doUnbindService();
    }
    
    protected void onStop() {
        Log.d("OpenVPNClientStats", "STATS: onStop");
        cancel_stats();
        super.onStop();
    }
    
    protected void onStart() {
        Log.d("OpenVPNClientStats", "STATS: onStart");
        show_stats();
        schedule_stats();
        super.onStart();
    }
    
    protected void post_bind() {
        Log.d("OpenVPNClientStats", "STATS: post_bind");
        show_stats();
    }
}
