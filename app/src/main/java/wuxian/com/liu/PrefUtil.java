/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package net.openvpn.openvpn;

import android.content.SharedPreferences;
import android.util.Log;
import java.util.Set;

public class PrefUtil {
    private static final String TAG = "PrefUtil";
    private SharedPreferences mSettings;
    
    PrefUtil(SharedPreferences prefs) {
        mSettings = prefs;
    }
    
    public boolean contains_key(String key) {
        return mSettings.contains(key);
    }
    
    public String get_string(String key) {
        try {
            String value = mSettings.getString(key, 0x0);
            Log.d("PrefUtil", String.format("get_string: %s=\'%s\'", key, value));
            return value;
        } catch(ClassCastException e) {
            Log.d("PrefUtil", String.format("get_string %s class cast exception", key, value, key));
            return null;
        }
        return value;
    }
    
    public Set<String> get_string_set(String key) {
        try {
            Set<String> value = mSettings.getStringSet(key, 0x0);
            Log.d("PrefUtil", String.format("get_string_set: %s=\'%s\'", key, value));
            return value;
        } catch(ClassCastException e) {
            Log.d("PrefUtil", String.format("get_string_set %s class cast exception", key, value, key));
            return null;
        }
        return value;
    }
    
    public boolean get_boolean(String key, boolean default_value) {
        try {
            boolean value = mSettings.getBoolean(key, default_value);
            Log.d("PrefUtil", String.format("get_boolean: %s=%b", key, Boolean.valueOf(value)));
            return value;
        } catch(ClassCastException e) {
            Log.d("PrefUtil", String.format("get_boolean %s class cast exception", key, Boolean.valueOf(value), key));
            return default_value;
        }
        return value;
    }
    
    public void set_string(String key, String value) {
        SharedPreferences.Editor editor = mSettings.edit();
        editor.putString(key, value);
        Log.d("PrefUtil", String.format("set_string: %s=\'%s\'", key, value));
        editor.apply();
    }
    
    public void set_string_set(String key, Set<String> value) {
        SharedPreferences.Editor editor = mSettings.edit();
        editor.putStringSet(key, value);
        Log.d("PrefUtil", String.format("set_string: %s=\'%s\'", key, value));
        editor.apply();
    }
    
    public void set_boolean(String key, boolean value) {
        SharedPreferences.Editor editor = mSettings.edit();
        editor.putBoolean(key, value);
        Log.d("PrefUtil", String.format("set_boolean: %s=%b", key, Boolean.valueOf(value)));
        editor.apply();
    }
    
    public String get_string_by_profile(String profile_name, String key) {
        try {
            String pkey = key_by_profile(profile_name, key);
            String value = mSettings.getString(pkey, 0x0);
            Log.d("PrefUtil", String.format("get_string_by_profile: key=\'%s\' value=\'%s\'", pkey, value));
            return value;
        } catch(ClassCastException e) {
            Log.d("PrefUtil", "get_string_by_profile class cast exception");
            return null;
        }
        return value;
    }
    
    public void set_string_by_profile(String profile_name, String key, String value) {
        SharedPreferences.Editor editor = mSettings.edit();
        String pkey = key_by_profile(profile_name, key);
        Log.d("PrefUtil", String.format("set_string_by_profile: key=\'%s\' value=\'%s\'", pkey, value));
        editor.putString(pkey, value);
        editor.apply();
    }
    
    public boolean get_boolean_by_profile(String profile_name, String key, boolean default_value) {
        try {
            String pkey = key_by_profile(profile_name, key);
            boolean value = mSettings.getBoolean(pkey, default_value);
            Log.d("PrefUtil", String.format("get_boolean_by_profile: key=\'%s\' value=%b", pkey, Boolean.valueOf(value)));
            return value;
        } catch(ClassCastException e) {
            Log.d("PrefUtil", "get_boolean_by_profile class cast exception");
            return default_value;
        }
        return value;
    }
    
    public void set_boolean_by_profile(String profile_name, String key, boolean value) {
        SharedPreferences.Editor editor = mSettings.edit();
        String pkey = key_by_profile(profile_name, key);
        Log.d("PrefUtil", String.format("set_boolean_by_profile: key=\'%s\' value=%b", pkey, Boolean.valueOf(value)));
        editor.putBoolean(pkey, value);
        editor.apply();
    }
    
    public void delete_key(String key) {
        SharedPreferences.Editor editor = mSettings.edit();
        Log.d("PrefUtil", String.format("delete_key: key=\'%s\'", key));
        editor.remove(key);
        editor.apply();
    }
    
    public void delete_key_by_profile(String profile_name, String key) {
        SharedPreferences.Editor editor = mSettings.edit();
        String pkey = key_by_profile(profile_name, key);
        Log.d("PrefUtil", String.format("delete_key_by_profile: key=\'%s\'", pkey));
        editor.remove(pkey);
        editor.apply();
    }
    
    private String key_by_profile(String profile_name, String key) {
        return String.format("%s.%s", key, profile_name);
    }
}
