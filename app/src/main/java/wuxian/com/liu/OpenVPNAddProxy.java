/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package net.openvpn.openvpn;

import android.view.View;
import android.widget.TextView;
import android.widget.CheckBox;
import android.widget.Button;
import android.widget.EditText;
import android.util.Log;
import android.text.Editable;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.content.SharedPreferences;
import android.view.KeyEvent;
import android.content.Intent;

public class OpenVPNAddProxy extends OpenVPNClientBase implements View.OnClickListener, TextView.OnEditorActionListener {
    private static final String TAG = "OpenVPNAddProxy";
    CheckBox allow_cleartext_auth_checkbox;
    Button cancel_button;
    EditText friendly_name_edit;
    EditText host_edit;
    String mod_proxy_name;
    EditText port_edit;
    private PrefUtil prefs;
    Button save_button;
    TextView title_textview;
    
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(0x7f030001);
        prefs = new PrefUtil(PreferenceManager.getDefaultSharedPreferences(this));
        title_textview = (TextView)findViewById(0x7f0a0006);
        friendly_name_edit = (EditText)findViewById(0x7f0a0008);
        host_edit = (EditText)findViewById(0x7f0a0009);
        port_edit = (EditText)findViewById(0x7f0a000b);
        allow_cleartext_auth_checkbox = (CheckBox)findViewById(0x7f0a000d);
        save_button = (Button)findViewById(0x7f0a000f);
        cancel_button = (Button)findViewById(0x7f0a0010);
        save_button.setOnClickListener(this);
        cancel_button.setOnClickListener(this);
        port_edit.setOnEditorActionListener(this);
        doBindService();
    }
    
    public void onClick(View v) {
        Log.d("OpenVPNAddProxy", "onClick");
        int viewid = v.getId();
        if(viewid == 0x7f0a000f) {
            ProxyList proxy_list = get_proxy_list();
            if(proxy_list != null) {
                ProxyList.Item item = new ProxyList.Item();
                String friendly_name = friendly_name_edit.getText().toString().trim();
                if(friendly_name.length() > 0) {
                    item.friendly_name = friendly_name;
                }
                item.host = host_edit.getText().toString().trim();
                item.port = port_edit.getText().toString().trim();
                item.allow_cleartext_auth = allow_cleartext_auth_checkbox.isChecked();
                if(item.is_valid()) {
                    String name = item.name();
                    if(!name.equals(mod_proxy_name)) {
                        proxy_list.remove(mod_proxy_name);
                    }
                    proxy_list.put(item);
                    proxy_list.set_enabled(name);
                    proxy_list.save();
                    gen_ui_reset_event(false);
                    finish();
                }
                return;
            }
            Log.d("OpenVPNAddProxy", "proxy_list is null on save!");
            finish();
            return;
        }
        if(viewid == 0x7f0a0010) {
            finish();
        }
    }
    
    public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
        if((action_enter(actionId, event)) && (v == port_edit)) {
            onClick(save_button);
            return true;
        }
        return false;
    }
    
    protected void onDestroy() {
        Log.d("OpenVPNAddProxy", "onDestroy");
        stop();
        super.onDestroy();
    }
    
    private void stop() {
        doUnbindService();
    }
    
    protected void post_bind() {
        Intent intent = getIntent();
        if(intent != null) {
            mod_proxy_name = intent.getStringExtra("net.openvpn.openvpn.PROXY_NAME");
            if(mod_proxy_name != null) {
                title_textview.setText(0x7f0600c4);
            }
            ProxyList proxy_list = get_proxy_list();
            if((mod_proxy_name != null) && (proxy_list != null)) {
                ProxyList.Item item = proxy_list.get(mod_proxy_name);
                if(item != null) {
                    if(item.friendly_name != null) {
                        friendly_name_edit.setText(item.friendly_name);
                    }
                    host_edit.setText(item.host);
                    port_edit.setText(item.port);
                    allow_cleartext_auth_checkbox.setChecked(item.allow_cleartext_auth);
                }
            }
        }
    }
}
