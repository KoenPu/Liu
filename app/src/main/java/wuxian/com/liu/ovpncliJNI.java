/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package net.openvpn.openvpn;


public class ovpncliJNI {
    
    public static final native boolean ClientAPI_Config_altProxy_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_altProxy_set(long p1, ClientAPI_Config p2, boolean p3);
    
    
    public static final native String ClientAPI_Config_compressionMode_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_compressionMode_set(long p1, ClientAPI_Config p2, String p3);
    
    
    public static final native int ClientAPI_Config_connTimeout_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_connTimeout_set(long p1, ClientAPI_Config p2, int p3);
    
    
    public static final native long ClientAPI_Config_contentList_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_contentList_set(long p1, ClientAPI_Config p2, long p3);
    
    
    public static final native String ClientAPI_Config_content_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_content_set(long p1, ClientAPI_Config p2, String p3);
    
    
    public static final native int ClientAPI_Config_defaultKeyDirection_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_defaultKeyDirection_set(long p1, ClientAPI_Config p2, int p3);
    
    
    public static final native boolean ClientAPI_Config_disableClientCert_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_disableClientCert_set(long p1, ClientAPI_Config p2, boolean p3);
    
    
    public static final native String ClientAPI_Config_externalPkiAlias_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_externalPkiAlias_set(long p1, ClientAPI_Config p2, String p3);
    
    
    public static final native boolean ClientAPI_Config_forceAesCbcCiphersuites_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_forceAesCbcCiphersuites_set(long p1, ClientAPI_Config p2, boolean p3);
    
    
    public static final native boolean ClientAPI_Config_googleDnsFallback_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_googleDnsFallback_set(long p1, ClientAPI_Config p2, boolean p3);
    
    
    public static final native String ClientAPI_Config_guiVersion_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_guiVersion_set(long p1, ClientAPI_Config p2, String p3);
    
    
    public static final native String ClientAPI_Config_privateKeyPassword_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_privateKeyPassword_set(long p1, ClientAPI_Config p2, String p3);
    
    
    public static final native String ClientAPI_Config_protoOverride_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_protoOverride_set(long p1, ClientAPI_Config p2, String p3);
    
    
    public static final native boolean ClientAPI_Config_proxyAllowCleartextAuth_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_proxyAllowCleartextAuth_set(long p1, ClientAPI_Config p2, boolean p3);
    
    
    public static final native String ClientAPI_Config_proxyHost_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_proxyHost_set(long p1, ClientAPI_Config p2, String p3);
    
    
    public static final native String ClientAPI_Config_proxyPassword_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_proxyPassword_set(long p1, ClientAPI_Config p2, String p3);
    
    
    public static final native String ClientAPI_Config_proxyPort_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_proxyPort_set(long p1, ClientAPI_Config p2, String p3);
    
    
    public static final native String ClientAPI_Config_proxyUsername_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_proxyUsername_set(long p1, ClientAPI_Config p2, String p3);
    
    
    public static final native String ClientAPI_Config_serverOverride_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_serverOverride_set(long p1, ClientAPI_Config p2, String p3);
    
    
    public static final native String ClientAPI_Config_tlsVersionMinOverride_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_tlsVersionMinOverride_set(long p1, ClientAPI_Config p2, String p3);
    
    
    public static final native boolean ClientAPI_Config_tunPersist_get(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_Config_tunPersist_set(long p1, ClientAPI_Config p2, boolean p3);
    
    
    public static final native String ClientAPI_ConnectionInfo_clientIp_get(long p1, ClientAPI_ConnectionInfo p2);
    
    
    public static final native void ClientAPI_ConnectionInfo_clientIp_set(long p1, ClientAPI_ConnectionInfo p2, String p3);
    
    
    public static final native boolean ClientAPI_ConnectionInfo_defined_get(long p1, ClientAPI_ConnectionInfo p2);
    
    
    public static final native void ClientAPI_ConnectionInfo_defined_set(long p1, ClientAPI_ConnectionInfo p2, boolean p3);
    
    
    public static final native String ClientAPI_ConnectionInfo_serverHost_get(long p1, ClientAPI_ConnectionInfo p2);
    
    
    public static final native void ClientAPI_ConnectionInfo_serverHost_set(long p1, ClientAPI_ConnectionInfo p2, String p3);
    
    
    public static final native String ClientAPI_ConnectionInfo_serverIp_get(long p1, ClientAPI_ConnectionInfo p2);
    
    
    public static final native void ClientAPI_ConnectionInfo_serverIp_set(long p1, ClientAPI_ConnectionInfo p2, String p3);
    
    
    public static final native String ClientAPI_ConnectionInfo_serverPort_get(long p1, ClientAPI_ConnectionInfo p2);
    
    
    public static final native void ClientAPI_ConnectionInfo_serverPort_set(long p1, ClientAPI_ConnectionInfo p2, String p3);
    
    
    public static final native String ClientAPI_ConnectionInfo_serverProto_get(long p1, ClientAPI_ConnectionInfo p2);
    
    
    public static final native void ClientAPI_ConnectionInfo_serverProto_set(long p1, ClientAPI_ConnectionInfo p2, String p3);
    
    
    public static final native String ClientAPI_ConnectionInfo_tunName_get(long p1, ClientAPI_ConnectionInfo p2);
    
    
    public static final native void ClientAPI_ConnectionInfo_tunName_set(long p1, ClientAPI_ConnectionInfo p2, String p3);
    
    
    public static final native String ClientAPI_ConnectionInfo_user_get(long p1, ClientAPI_ConnectionInfo p2);
    
    
    public static final native void ClientAPI_ConnectionInfo_user_set(long p1, ClientAPI_ConnectionInfo p2, String p3);
    
    
    public static final native String ClientAPI_ConnectionInfo_vpnIp4_get(long p1, ClientAPI_ConnectionInfo p2);
    
    
    public static final native void ClientAPI_ConnectionInfo_vpnIp4_set(long p1, ClientAPI_ConnectionInfo p2, String p3);
    
    
    public static final native String ClientAPI_ConnectionInfo_vpnIp6_get(long p1, ClientAPI_ConnectionInfo p2);
    
    
    public static final native void ClientAPI_ConnectionInfo_vpnIp6_set(long p1, ClientAPI_ConnectionInfo p2, String p3);
    
    
    public static final native String ClientAPI_DynamicChallenge_challenge_get(long p1, ClientAPI_DynamicChallenge p2);
    
    
    public static final native void ClientAPI_DynamicChallenge_challenge_set(long p1, ClientAPI_DynamicChallenge p2, String p3);
    
    
    public static final native boolean ClientAPI_DynamicChallenge_echo_get(long p1, ClientAPI_DynamicChallenge p2);
    
    
    public static final native void ClientAPI_DynamicChallenge_echo_set(long p1, ClientAPI_DynamicChallenge p2, boolean p3);
    
    
    public static final native boolean ClientAPI_DynamicChallenge_responseRequired_get(long p1, ClientAPI_DynamicChallenge p2);
    
    
    public static final native void ClientAPI_DynamicChallenge_responseRequired_set(long p1, ClientAPI_DynamicChallenge p2, boolean p3);
    
    
    public static final native boolean ClientAPI_EvalConfig_allowPasswordSave_get(long p1, ClientAPI_EvalConfig p2);
    
    
    public static final native void ClientAPI_EvalConfig_allowPasswordSave_set(long p1, ClientAPI_EvalConfig p2, boolean p3);
    
    
    public static final native boolean ClientAPI_EvalConfig_autologin_get(long p1, ClientAPI_EvalConfig p2);
    
    
    public static final native void ClientAPI_EvalConfig_autologin_set(long p1, ClientAPI_EvalConfig p2, boolean p3);
    
    
    public static final native boolean ClientAPI_EvalConfig_error_get(long p1, ClientAPI_EvalConfig p2);
    
    
    public static final native void ClientAPI_EvalConfig_error_set(long p1, ClientAPI_EvalConfig p2, boolean p3);
    
    
    public static final native boolean ClientAPI_EvalConfig_externalPki_get(long p1, ClientAPI_EvalConfig p2);
    
    
    public static final native void ClientAPI_EvalConfig_externalPki_set(long p1, ClientAPI_EvalConfig p2, boolean p3);
    
    
    public static final native String ClientAPI_EvalConfig_friendlyName_get(long p1, ClientAPI_EvalConfig p2);
    
    
    public static final native void ClientAPI_EvalConfig_friendlyName_set(long p1, ClientAPI_EvalConfig p2, String p3);
    
    
    public static final native String ClientAPI_EvalConfig_message_get(long p1, ClientAPI_EvalConfig p2);
    
    
    public static final native void ClientAPI_EvalConfig_message_set(long p1, ClientAPI_EvalConfig p2, String p3);
    
    
    public static final native boolean ClientAPI_EvalConfig_privateKeyPasswordRequired_get(long p1, ClientAPI_EvalConfig p2);
    
    
    public static final native void ClientAPI_EvalConfig_privateKeyPasswordRequired_set(long p1, ClientAPI_EvalConfig p2, boolean p3);
    
    
    public static final native String ClientAPI_EvalConfig_profileName_get(long p1, ClientAPI_EvalConfig p2);
    
    
    public static final native void ClientAPI_EvalConfig_profileName_set(long p1, ClientAPI_EvalConfig p2, String p3);
    
    
    public static final native long ClientAPI_EvalConfig_serverList_get(long p1, ClientAPI_EvalConfig p2);
    
    
    public static final native void ClientAPI_EvalConfig_serverList_set(long p1, ClientAPI_EvalConfig p2, long p3, ClientAPI_ServerEntryVector p4);
    
    
    public static final native boolean ClientAPI_EvalConfig_staticChallengeEcho_get(long p1, ClientAPI_EvalConfig p2);
    
    
    public static final native void ClientAPI_EvalConfig_staticChallengeEcho_set(long p1, ClientAPI_EvalConfig p2, boolean p3);
    
    
    public static final native String ClientAPI_EvalConfig_staticChallenge_get(long p1, ClientAPI_EvalConfig p2);
    
    
    public static final native void ClientAPI_EvalConfig_staticChallenge_set(long p1, ClientAPI_EvalConfig p2, String p3);
    
    
    public static final native String ClientAPI_EvalConfig_userlockedUsername_get(long p1, ClientAPI_EvalConfig p2);
    
    
    public static final native void ClientAPI_EvalConfig_userlockedUsername_set(long p1, ClientAPI_EvalConfig p2, String p3);
    
    
    public static final native boolean ClientAPI_Event_error_get(long p1, ClientAPI_Event p2);
    
    
    public static final native void ClientAPI_Event_error_set(long p1, ClientAPI_Event p2, boolean p3);
    
    
    public static final native String ClientAPI_Event_info_get(long p1, ClientAPI_Event p2);
    
    
    public static final native void ClientAPI_Event_info_set(long p1, ClientAPI_Event p2, String p3);
    
    
    public static final native String ClientAPI_Event_name_get(long p1, ClientAPI_Event p2);
    
    
    public static final native void ClientAPI_Event_name_set(long p1, ClientAPI_Event p2, String p3);
    
    
    public static final native boolean ClientAPI_ExternalPKIBase_sign(long p1, ClientAPI_ExternalPKIBase p2, String p3, String p4, long p5);
    
    
    public static final native long ClientAPI_ExternalPKICertRequest_SWIGUpcast(long p1);
    
    
    public static final native String ClientAPI_ExternalPKICertRequest_cert_get(long p1, ClientAPI_ExternalPKICertRequest p2);
    
    
    public static final native void ClientAPI_ExternalPKICertRequest_cert_set(long p1, ClientAPI_ExternalPKICertRequest p2, String p3);
    
    
    public static final native String ClientAPI_ExternalPKICertRequest_supportingChain_get(long p1, ClientAPI_ExternalPKICertRequest p2);
    
    
    public static final native void ClientAPI_ExternalPKICertRequest_supportingChain_set(long p1, ClientAPI_ExternalPKICertRequest p2, String p3);
    
    
    public static final native String ClientAPI_ExternalPKIRequestBase_alias_get(long p1, ClientAPI_ExternalPKIRequestBase p2);
    
    
    public static final native void ClientAPI_ExternalPKIRequestBase_alias_set(long p1, ClientAPI_ExternalPKIRequestBase p2, String p3);
    
    
    public static final native String ClientAPI_ExternalPKIRequestBase_errorText_get(long p1, ClientAPI_ExternalPKIRequestBase p2);
    
    
    public static final native void ClientAPI_ExternalPKIRequestBase_errorText_set(long p1, ClientAPI_ExternalPKIRequestBase p2, String p3);
    
    
    public static final native boolean ClientAPI_ExternalPKIRequestBase_error_get(long p1, ClientAPI_ExternalPKIRequestBase p2);
    
    
    public static final native void ClientAPI_ExternalPKIRequestBase_error_set(long p1, ClientAPI_ExternalPKIRequestBase p2, boolean p3);
    
    
    public static final native boolean ClientAPI_ExternalPKIRequestBase_invalidAlias_get(long p1, ClientAPI_ExternalPKIRequestBase p2);
    
    
    public static final native void ClientAPI_ExternalPKIRequestBase_invalidAlias_set(long p1, ClientAPI_ExternalPKIRequestBase p2, boolean p3);
    
    
    public static final native long ClientAPI_ExternalPKISignRequest_SWIGUpcast(long p1);
    
    
    public static final native String ClientAPI_ExternalPKISignRequest_data_get(long p1, ClientAPI_ExternalPKISignRequest p2);
    
    
    public static final native void ClientAPI_ExternalPKISignRequest_data_set(long p1, ClientAPI_ExternalPKISignRequest p2, String p3);
    
    
    public static final native String ClientAPI_ExternalPKISignRequest_sigType_get(long p1, ClientAPI_ExternalPKISignRequest p2);
    
    
    public static final native void ClientAPI_ExternalPKISignRequest_sigType_set(long p1, ClientAPI_ExternalPKISignRequest p2, String p3);
    
    
    public static final native String ClientAPI_ExternalPKISignRequest_sig_get(long p1, ClientAPI_ExternalPKISignRequest p2);
    
    
    public static final native void ClientAPI_ExternalPKISignRequest_sig_set(long p1, ClientAPI_ExternalPKISignRequest p2, String p3);
    
    
    public static final native long ClientAPI_InterfaceStats_bytesIn_get(long p1, ClientAPI_InterfaceStats p2);
    
    
    public static final native void ClientAPI_InterfaceStats_bytesIn_set(long p1, ClientAPI_InterfaceStats p2, long p3);
    
    
    public static final native long ClientAPI_InterfaceStats_bytesOut_get(long p1, ClientAPI_InterfaceStats p2);
    
    
    public static final native void ClientAPI_InterfaceStats_bytesOut_set(long p1, ClientAPI_InterfaceStats p2, long p3);
    
    
    public static final native long ClientAPI_InterfaceStats_errorsIn_get(long p1, ClientAPI_InterfaceStats p2);
    
    
    public static final native void ClientAPI_InterfaceStats_errorsIn_set(long p1, ClientAPI_InterfaceStats p2, long p3);
    
    
    public static final native long ClientAPI_InterfaceStats_errorsOut_get(long p1, ClientAPI_InterfaceStats p2);
    
    
    public static final native void ClientAPI_InterfaceStats_errorsOut_set(long p1, ClientAPI_InterfaceStats p2, long p3);
    
    
    public static final native long ClientAPI_InterfaceStats_packetsIn_get(long p1, ClientAPI_InterfaceStats p2);
    
    
    public static final native void ClientAPI_InterfaceStats_packetsIn_set(long p1, ClientAPI_InterfaceStats p2, long p3);
    
    
    public static final native long ClientAPI_InterfaceStats_packetsOut_get(long p1, ClientAPI_InterfaceStats p2);
    
    
    public static final native void ClientAPI_InterfaceStats_packetsOut_set(long p1, ClientAPI_InterfaceStats p2, long p3);
    
    
    public static final native String ClientAPI_KeyValue_key_get(long p1, ClientAPI_KeyValue p2);
    
    
    public static final native void ClientAPI_KeyValue_key_set(long p1, ClientAPI_KeyValue p2, String p3);
    
    
    public static final native String ClientAPI_KeyValue_value_get(long p1, ClientAPI_KeyValue p2);
    
    
    public static final native void ClientAPI_KeyValue_value_set(long p1, ClientAPI_KeyValue p2, String p3);
    
    
    public static final native void ClientAPI_LLVector_add(long p1, ClientAPI_LLVector p2, long p3);
    
    
    public static final native long ClientAPI_LLVector_capacity(long p1, ClientAPI_LLVector p2);
    
    
    public static final native void ClientAPI_LLVector_clear(long p1, ClientAPI_LLVector p2);
    
    
    public static final native long ClientAPI_LLVector_get(long p1, ClientAPI_LLVector p2, int p3);
    
    
    public static final native boolean ClientAPI_LLVector_isEmpty(long p1, ClientAPI_LLVector p2);
    
    
    public static final native void ClientAPI_LLVector_reserve(long p1, ClientAPI_LLVector p2, long p3);
    
    
    public static final native void ClientAPI_LLVector_set(long p1, ClientAPI_LLVector p2, int p3, long p4);
    
    
    public static final native long ClientAPI_LLVector_size(long p1, ClientAPI_LLVector p2);
    
    
    public static final native String ClientAPI_LogInfo_text_get(long p1, ClientAPI_LogInfo p2);
    
    
    public static final native void ClientAPI_LogInfo_text_set(long p1, ClientAPI_LogInfo p2, String p3);
    
    
    public static final native String ClientAPI_MergeConfig_basename_get(long p1, ClientAPI_MergeConfig p2);
    
    
    public static final native void ClientAPI_MergeConfig_basename_set(long p1, ClientAPI_MergeConfig p2, String p3);
    
    
    public static final native String ClientAPI_MergeConfig_errorText_get(long p1, ClientAPI_MergeConfig p2);
    
    
    public static final native void ClientAPI_MergeConfig_errorText_set(long p1, ClientAPI_MergeConfig p2, String p3);
    
    
    public static final native String ClientAPI_MergeConfig_profileContent_get(long p1, ClientAPI_MergeConfig p2);
    
    
    public static final native void ClientAPI_MergeConfig_profileContent_set(long p1, ClientAPI_MergeConfig p2, String p3);
    
    
    public static final native long ClientAPI_MergeConfig_refPathList_get(long p1, ClientAPI_MergeConfig p2);
    
    
    public static final native void ClientAPI_MergeConfig_refPathList_set(long p1, ClientAPI_MergeConfig p2, long p3);
    
    
    public static final native String ClientAPI_MergeConfig_status_get(long p1, ClientAPI_MergeConfig p2);
    
    
    public static final native void ClientAPI_MergeConfig_status_set(long p1, ClientAPI_MergeConfig p2, String p3);
    
    
    public static final native long ClientAPI_OpenVPNClient_SWIGUpcast(long p1);
    
    
    public static final native int ClientAPI_OpenVPNClient_app_expire();
    
    
    public static final native void ClientAPI_OpenVPNClient_change_ownership(ClientAPI_OpenVPNClient p1, long p2, boolean p3);
    
    
    public static final native long ClientAPI_OpenVPNClient_connect(long p1, ClientAPI_OpenVPNClient p2);
    
    
    public static final native long ClientAPI_OpenVPNClient_connection_info(long p1, ClientAPI_OpenVPNClient p2);
    
    
    public static final native String ClientAPI_OpenVPNClient_copyright();
    
    
    public static final native String ClientAPI_OpenVPNClient_crypto_self_test();
    
    
    public static final native void ClientAPI_OpenVPNClient_director_connect(ClientAPI_OpenVPNClient p1, long p2, boolean p3, boolean p4);
    
    
    public static final native long ClientAPI_OpenVPNClient_eval_config(long p1, ClientAPI_OpenVPNClient p2, long p3, ClientAPI_Config p4);
    
    
    public static final native long ClientAPI_OpenVPNClient_eval_config_static(long p1, ClientAPI_Config p2);
    
    
    public static final native void ClientAPI_OpenVPNClient_event(long p1, ClientAPI_OpenVPNClient p2, long p3, ClientAPI_Event p4);
    
    
    public static final native void ClientAPI_OpenVPNClient_external_pki_cert_request(long p1, ClientAPI_OpenVPNClient p2, long p3, ClientAPI_ExternalPKICertRequest p4);
    
    
    public static final native void ClientAPI_OpenVPNClient_external_pki_sign_request(long p1, ClientAPI_OpenVPNClient p2, long p3, ClientAPI_ExternalPKISignRequest p4);
    
    
    public static final native void ClientAPI_OpenVPNClient_init_process();
    
    
    public static final native void ClientAPI_OpenVPNClient_log(long p1, ClientAPI_OpenVPNClient p2, long p3, ClientAPI_LogInfo p4);
    
    
    public static final native int ClientAPI_OpenVPNClient_max_profile_size();
    
    
    public static final native long ClientAPI_OpenVPNClient_merge_config_static(String p1, boolean p2);
    
    
    public static final native long ClientAPI_OpenVPNClient_merge_config_string_static(String p1);
    
    
    public static final native boolean ClientAPI_OpenVPNClient_parse_dynamic_challenge(String p1, long p2, ClientAPI_DynamicChallenge p3);
    
    
    public static final native void ClientAPI_OpenVPNClient_pause(long p1, ClientAPI_OpenVPNClient p2, String p3);
    
    
    public static final native boolean ClientAPI_OpenVPNClient_pause_on_connection_timeout(long p1, ClientAPI_OpenVPNClient p2);
    
    
    public static final native String ClientAPI_OpenVPNClient_platform();
    
    
    public static final native long ClientAPI_OpenVPNClient_provide_creds(long p1, ClientAPI_OpenVPNClient p2, long p3, ClientAPI_ProvideCreds p4);
    
    
    public static final native void ClientAPI_OpenVPNClient_reconnect(long p1, ClientAPI_OpenVPNClient p2, int p3);
    
    
    public static final native void ClientAPI_OpenVPNClient_resume(long p1, ClientAPI_OpenVPNClient p2);
    
    
    public static final native boolean ClientAPI_OpenVPNClient_session_token(long p1, ClientAPI_OpenVPNClient p2, long p3, ClientAPI_SessionToken p4);
    
    
    public static final native boolean ClientAPI_OpenVPNClient_socket_protect(long p1, ClientAPI_OpenVPNClient p2, int p3);
    
    
    public static final native long ClientAPI_OpenVPNClient_stats_bundle(long p1, ClientAPI_OpenVPNClient p2);
    
    
    public static final native int ClientAPI_OpenVPNClient_stats_n();
    
    
    public static final native String ClientAPI_OpenVPNClient_stats_name(int p1);
    
    
    public static final native long ClientAPI_OpenVPNClient_stats_value(long p1, ClientAPI_OpenVPNClient p2, int p3);
    
    
    public static final native void ClientAPI_OpenVPNClient_stop(long p1, ClientAPI_OpenVPNClient p2);
    
    
    public static final native long ClientAPI_OpenVPNClient_transport_stats(long p1, ClientAPI_OpenVPNClient p2);
    
    
    public static final native long ClientAPI_OpenVPNClient_tun_stats(long p1, ClientAPI_OpenVPNClient p2);
    
    
    public static final native void ClientAPI_OpenVPNClient_uninit_process();
    
    
    public static final native boolean ClientAPI_ProvideCreds_cachePassword_get(long p1, ClientAPI_ProvideCreds p2);
    
    
    public static final native void ClientAPI_ProvideCreds_cachePassword_set(long p1, ClientAPI_ProvideCreds p2, boolean p3);
    
    
    public static final native String ClientAPI_ProvideCreds_dynamicChallengeCookie_get(long p1, ClientAPI_ProvideCreds p2);
    
    
    public static final native void ClientAPI_ProvideCreds_dynamicChallengeCookie_set(long p1, ClientAPI_ProvideCreds p2, String p3);
    
    
    public static final native String ClientAPI_ProvideCreds_password_get(long p1, ClientAPI_ProvideCreds p2);
    
    
    public static final native void ClientAPI_ProvideCreds_password_set(long p1, ClientAPI_ProvideCreds p2, String p3);
    
    
    public static final native boolean ClientAPI_ProvideCreds_replacePasswordWithSessionID_get(long p1, ClientAPI_ProvideCreds p2);
    
    
    public static final native void ClientAPI_ProvideCreds_replacePasswordWithSessionID_set(long p1, ClientAPI_ProvideCreds p2, boolean p3);
    
    
    public static final native String ClientAPI_ProvideCreds_response_get(long p1, ClientAPI_ProvideCreds p2);
    
    
    public static final native void ClientAPI_ProvideCreds_response_set(long p1, ClientAPI_ProvideCreds p2, String p3);
    
    
    public static final native String ClientAPI_ProvideCreds_username_get(long p1, ClientAPI_ProvideCreds p2);
    
    
    public static final native void ClientAPI_ProvideCreds_username_set(long p1, ClientAPI_ProvideCreds p2, String p3);
    
    
    public static final native void ClientAPI_ServerEntryVector_add(long p1, ClientAPI_ServerEntryVector p2, long p3, ClientAPI_ServerEntry p4);
    
    
    public static final native long ClientAPI_ServerEntryVector_capacity(long p1, ClientAPI_ServerEntryVector p2);
    
    
    public static final native void ClientAPI_ServerEntryVector_clear(long p1, ClientAPI_ServerEntryVector p2);
    
    
    public static final native long ClientAPI_ServerEntryVector_get(long p1, ClientAPI_ServerEntryVector p2, int p3);
    
    
    public static final native boolean ClientAPI_ServerEntryVector_isEmpty(long p1, ClientAPI_ServerEntryVector p2);
    
    
    public static final native void ClientAPI_ServerEntryVector_reserve(long p1, ClientAPI_ServerEntryVector p2, long p3);
    
    
    public static final native void ClientAPI_ServerEntryVector_set(long p1, ClientAPI_ServerEntryVector p2, int p3, long p4, ClientAPI_ServerEntry p5);
    
    
    public static final native long ClientAPI_ServerEntryVector_size(long p1, ClientAPI_ServerEntryVector p2);
    
    
    public static final native String ClientAPI_ServerEntry_friendlyName_get(long p1, ClientAPI_ServerEntry p2);
    
    
    public static final native void ClientAPI_ServerEntry_friendlyName_set(long p1, ClientAPI_ServerEntry p2, String p3);
    
    
    public static final native String ClientAPI_ServerEntry_server_get(long p1, ClientAPI_ServerEntry p2);
    
    
    public static final native void ClientAPI_ServerEntry_server_set(long p1, ClientAPI_ServerEntry p2, String p3);
    
    
    public static final native String ClientAPI_SessionToken_session_id_get(long p1, ClientAPI_SessionToken p2);
    
    
    public static final native void ClientAPI_SessionToken_session_id_set(long p1, ClientAPI_SessionToken p2, String p3);
    
    
    public static final native String ClientAPI_SessionToken_username_get(long p1, ClientAPI_SessionToken p2);
    
    
    public static final native void ClientAPI_SessionToken_username_set(long p1, ClientAPI_SessionToken p2, String p3);
    
    
    public static final native boolean ClientAPI_Status_error_get(long p1, ClientAPI_Status p2);
    
    
    public static final native void ClientAPI_Status_error_set(long p1, ClientAPI_Status p2, boolean p3);
    
    
    public static final native String ClientAPI_Status_message_get(long p1, ClientAPI_Status p2);
    
    
    public static final native void ClientAPI_Status_message_set(long p1, ClientAPI_Status p2, String p3);
    
    
    public static final native String ClientAPI_Status_status_get(long p1, ClientAPI_Status p2);
    
    
    public static final native void ClientAPI_Status_status_set(long p1, ClientAPI_Status p2, String p3);
    
    
    public static final native long ClientAPI_TransportStats_bytesIn_get(long p1, ClientAPI_TransportStats p2);
    
    
    public static final native void ClientAPI_TransportStats_bytesIn_set(long p1, ClientAPI_TransportStats p2, long p3);
    
    
    public static final native long ClientAPI_TransportStats_bytesOut_get(long p1, ClientAPI_TransportStats p2);
    
    
    public static final native void ClientAPI_TransportStats_bytesOut_set(long p1, ClientAPI_TransportStats p2, long p3);
    
    
    public static final native int ClientAPI_TransportStats_lastPacketReceived_get(long p1, ClientAPI_TransportStats p2);
    
    
    public static final native void ClientAPI_TransportStats_lastPacketReceived_set(long p1, ClientAPI_TransportStats p2, int p3);
    
    
    public static final native long ClientAPI_TransportStats_packetsIn_get(long p1, ClientAPI_TransportStats p2);
    
    
    public static final native void ClientAPI_TransportStats_packetsIn_set(long p1, ClientAPI_TransportStats p2, long p3);
    
    
    public static final native long ClientAPI_TransportStats_packetsOut_get(long p1, ClientAPI_TransportStats p2);
    
    
    public static final native void ClientAPI_TransportStats_packetsOut_set(long p1, ClientAPI_TransportStats p2, long p3);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_add_address(long p1, ClientAPI_TunBuilderBase p2, String p3, int p4, String p5, boolean p6, boolean p7);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_add_dns_server(long p1, ClientAPI_TunBuilderBase p2, String p3, boolean p4);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_add_proxy_bypass(long p1, ClientAPI_TunBuilderBase p2, String p3);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_add_route(long p1, ClientAPI_TunBuilderBase p2, String p3, int p4, boolean p5);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_add_search_domain(long p1, ClientAPI_TunBuilderBase p2, String p3);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_add_wins_server(long p1, ClientAPI_TunBuilderBase p2, String p3);
    
    
    public static final native int ClientAPI_TunBuilderBase_tun_builder_establish(long p1, ClientAPI_TunBuilderBase p2);
    
    
    public static final native void ClientAPI_TunBuilderBase_tun_builder_establish_lite(long p1, ClientAPI_TunBuilderBase p2);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_exclude_route(long p1, ClientAPI_TunBuilderBase p2, String p3, int p4, boolean p5);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_new(long p1, ClientAPI_TunBuilderBase p2);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_persist(long p1, ClientAPI_TunBuilderBase p2);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_reroute_gw(long p1, ClientAPI_TunBuilderBase p2, boolean p3, boolean p4, long p5);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_set_block_ipv6(long p1, ClientAPI_TunBuilderBase p2, boolean p3);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_set_mtu(long p1, ClientAPI_TunBuilderBase p2, int p3);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_set_proxy_auto_config_url(long p1, ClientAPI_TunBuilderBase p2, String p3);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_set_proxy_http(long p1, ClientAPI_TunBuilderBase p2, String p3, int p4);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_set_proxy_https(long p1, ClientAPI_TunBuilderBase p2, String p3, int p4);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_set_remote_address(long p1, ClientAPI_TunBuilderBase p2, String p3, boolean p4);
    
    
    public static final native boolean ClientAPI_TunBuilderBase_tun_builder_set_session_name(long p1, ClientAPI_TunBuilderBase p2, String p3);
    
    
    public static final native void ClientAPI_TunBuilderBase_tun_builder_teardown(long p1, ClientAPI_TunBuilderBase p2, boolean p3);
    
    
    public static final native void delete_ClientAPI_Config(long p1);
    
    
    public static final native void delete_ClientAPI_ConnectionInfo(long p1);
    
    
    public static final native void delete_ClientAPI_DynamicChallenge(long p1);
    
    
    public static final native void delete_ClientAPI_EvalConfig(long p1);
    
    
    public static final native void delete_ClientAPI_Event(long p1);
    
    
    public static final native void delete_ClientAPI_ExternalPKIBase(long p1);
    
    
    public static final native void delete_ClientAPI_ExternalPKICertRequest(long p1);
    
    
    public static final native void delete_ClientAPI_ExternalPKIRequestBase(long p1);
    
    
    public static final native void delete_ClientAPI_ExternalPKISignRequest(long p1);
    
    
    public static final native void delete_ClientAPI_InterfaceStats(long p1);
    
    
    public static final native void delete_ClientAPI_KeyValue(long p1);
    
    
    public static final native void delete_ClientAPI_LLVector(long p1);
    
    
    public static final native void delete_ClientAPI_LogInfo(long p1);
    
    
    public static final native void delete_ClientAPI_MergeConfig(long p1);
    
    
    public static final native void delete_ClientAPI_OpenVPNClient(long p1);
    
    
    public static final native void delete_ClientAPI_ProvideCreds(long p1);
    
    
    public static final native void delete_ClientAPI_ServerEntry(long p1);
    
    
    public static final native void delete_ClientAPI_ServerEntryVector(long p1);
    
    
    public static final native void delete_ClientAPI_SessionToken(long p1);
    
    
    public static final native void delete_ClientAPI_Status(long p1);
    
    
    public static final native void delete_ClientAPI_TransportStats(long p1);
    
    
    public static final native void delete_ClientAPI_TunBuilderBase(long p1);
    
    
    public static final native long new_ClientAPI_Config();
    
    
    public static final native long new_ClientAPI_ConnectionInfo();
    
    
    public static final native long new_ClientAPI_DynamicChallenge();
    
    
    public static final native long new_ClientAPI_EvalConfig();
    
    
    public static final native long new_ClientAPI_Event();
    
    
    public static final native long new_ClientAPI_ExternalPKICertRequest();
    
    
    public static final native long new_ClientAPI_ExternalPKIRequestBase();
    
    
    public static final native long new_ClientAPI_ExternalPKISignRequest();
    
    
    public static final native long new_ClientAPI_InterfaceStats();
    
    
    public static final native long new_ClientAPI_KeyValue();
    
    
    public static final native long new_ClientAPI_LLVector__SWIG_0();
    
    
    public static final native long new_ClientAPI_LLVector__SWIG_1(long p1);
    
    
    public static final native long new_ClientAPI_LogInfo(String p1);
    
    
    public static final native long new_ClientAPI_MergeConfig();
    
    
    public static final native long new_ClientAPI_OpenVPNClient();
    
    
    public static final native long new_ClientAPI_ProvideCreds();
    
    
    public static final native long new_ClientAPI_ServerEntry();
    
    
    public static final native long new_ClientAPI_ServerEntryVector__SWIG_0();
    
    
    public static final native long new_ClientAPI_ServerEntryVector__SWIG_1(long p1);
    
    
    public static final native long new_ClientAPI_SessionToken();
    
    
    public static final native long new_ClientAPI_Status();
    
    
    public static final native long new_ClientAPI_TransportStats();
    
    
    public static final native long new_ClientAPI_TunBuilderBase();
    
    
    private static final native void swig_module_init();
    
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_new(ClientAPI_OpenVPNClient self) {
        return tun_builder_new();
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_set_remote_address(ClientAPI_OpenVPNClient self, String address, boolean ipv6) {
        return tun_builder_set_remote_address(address, ipv6);
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_add_address(ClientAPI_OpenVPNClient self, String address, int prefix_length, String gateway, boolean ipv6, boolean net30) {
        return self.tun_builder_add_address(address, prefix_length, gateway, ipv6, net30);
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_reroute_gw(ClientAPI_OpenVPNClient self, boolean ipv4, boolean ipv6, long flags) {
        return tun_builder_reroute_gw(ipv4, ipv6, flags);
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_add_route(ClientAPI_OpenVPNClient self, String address, int prefix_length, boolean ipv6) {
        return tun_builder_add_route(address, prefix_length, ipv6);
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_exclude_route(ClientAPI_OpenVPNClient self, String address, int prefix_length, boolean ipv6) {
        return tun_builder_exclude_route(address, prefix_length, ipv6);
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_add_dns_server(ClientAPI_OpenVPNClient self, String address, boolean ipv6) {
        return tun_builder_add_dns_server(address, ipv6);
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_add_search_domain(ClientAPI_OpenVPNClient self, String domain) {
        return tun_builder_add_search_domain(domain);
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_set_mtu(ClientAPI_OpenVPNClient self, int mtu) {
        return tun_builder_set_mtu(mtu);
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_set_session_name(ClientAPI_OpenVPNClient self, String name) {
        return tun_builder_set_session_name(name);
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_add_proxy_bypass(ClientAPI_OpenVPNClient self, String bypass_host) {
        return tun_builder_add_proxy_bypass(bypass_host);
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_set_proxy_auto_config_url(ClientAPI_OpenVPNClient self, String url) {
        return tun_builder_set_proxy_auto_config_url(url);
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_set_proxy_http(ClientAPI_OpenVPNClient self, String host, int port) {
        return tun_builder_set_proxy_http(host, port);
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_set_proxy_https(ClientAPI_OpenVPNClient self, String host, int port) {
        return tun_builder_set_proxy_https(host, port);
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_add_wins_server(ClientAPI_OpenVPNClient self, String address) {
        return tun_builder_add_wins_server(address);
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_set_block_ipv6(ClientAPI_OpenVPNClient self, boolean block_ipv6) {
        return tun_builder_set_block_ipv6(block_ipv6);
    }
    
    public static int SwigDirector_ClientAPI_OpenVPNClient_tun_builder_establish(ClientAPI_OpenVPNClient self) {
        return tun_builder_establish();
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_tun_builder_persist(ClientAPI_OpenVPNClient self) {
        return tun_builder_persist();
    }
    
    public static void SwigDirector_ClientAPI_OpenVPNClient_tun_builder_establish_lite(ClientAPI_OpenVPNClient self) {
        tun_builder_establish_lite();
    }
    
    public static void SwigDirector_ClientAPI_OpenVPNClient_tun_builder_teardown(ClientAPI_OpenVPNClient self, boolean disconnect) {
        tun_builder_teardown(disconnect);
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_socket_protect(ClientAPI_OpenVPNClient self, int socket) {
        return socket_protect(socket);
    }
    
    public static boolean SwigDirector_ClientAPI_OpenVPNClient_pause_on_connection_timeout(ClientAPI_OpenVPNClient self) {
        return pause_on_connection_timeout();
    }
    
    public static void SwigDirector_ClientAPI_OpenVPNClient_event(ClientAPI_OpenVPNClient self, long arg0) {
        event(new ClientAPI_Event(arg0, false));
    }
    
    public static void SwigDirector_ClientAPI_OpenVPNClient_log(ClientAPI_OpenVPNClient self, long arg0) {
        log(new ClientAPI_LogInfo(arg0, false));
    }
    
    public static void SwigDirector_ClientAPI_OpenVPNClient_external_pki_cert_request(ClientAPI_OpenVPNClient self, long arg0) {
        external_pki_cert_request(new ClientAPI_ExternalPKICertRequest(arg0, false));
    }
    
    public static void SwigDirector_ClientAPI_OpenVPNClient_external_pki_sign_request(ClientAPI_OpenVPNClient self, long arg0) {
        external_pki_sign_request(new ClientAPI_ExternalPKISignRequest(arg0, false));
    }
    
    static {
        swig_module_init();
    }
}
